/* soapStub.h
   Generated by gSOAP 2.8.44 for TmriOutAccess.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20844
# error "GSOAP VERSION 20844 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif
extern bool newSoapInterface;
extern std::string  ns1_queryObjectOut;
extern std::string  ns1_queryObjectOutResponse;
extern std::string  queryObjectOutResponse;
extern std::string  queryObjectOut;
extern std::string  ns1_writeObjectOut;
extern std::string  ns1_writeObjectOutResponse;
extern std::string  writeObjectOutResponse;
extern std::string  writeObjectOut;




/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns1__queryObjectOutResponse;	/* TmriOutAccess.h:255 */
struct ns1__queryObjectOut;	/* TmriOutAccess.h:255 */
struct ns1__writeObjectOutResponse;	/* TmriOutAccess.h:331 */
struct ns1__writeObjectOut;	/* TmriOutAccess.h:331 */



/* TmriOutAccess.h:255 */
#ifndef SOAP_TYPE_ns1__queryObjectOutResponse
#define SOAP_TYPE_ns1__queryObjectOutResponse (9)
/* complex XSD type 'ns1:queryObjectOutResponse': */
struct SOAP_CMAC ns1__queryObjectOutResponse {
      public:
        /** Required element 'queryObjectOutReturn' of XSD type 'xsd:string' */
        char *_queryObjectOutReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__queryObjectOutResponse */
        int soap_type() const { return SOAP_TYPE_ns1__queryObjectOutResponse; }
        /** Constructor with member initializations */
        ns1__queryObjectOutResponse()
        {
          _queryObjectOutReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__queryObjectOutResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__queryObjectOutResponse * SOAP_FMAC2 soap_instantiate_ns1__queryObjectOutResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* TmriOutAccess.h:255 */
#ifndef SOAP_TYPE_ns1__queryObjectOut
#define SOAP_TYPE_ns1__queryObjectOut (10)
/* complex XSD type 'ns1:queryObjectOut': */
struct SOAP_CMAC ns1__queryObjectOut {
      public:
        /** Optional element 'xtlb' of XSD type 'xsd:string' */
        char *_xtlb;
        /** Optional element 'jkxlh' of XSD type 'xsd:string' */
        char *_jkxlh;
        /** Optional element 'jkid' of XSD type 'xsd:string' */
        char *_jkid;
        /** Optional element 'UTF8XmlDoc' of XSD type 'xsd:string' */
        char *_QueryXmlDoc;
        /** Optional element 'dwjgdm' of XSD type 'xsd:string' */
        char *_dwjgdm;
        char *_cjsqbh;
        char *_zdbs;
        char *_dwmc;
        char *_yhbz;
        char *_yhxm;


      public:
        /** Return unique type id SOAP_TYPE_ns1__queryObjectOut */
        int soap_type() const { return SOAP_TYPE_ns1__queryObjectOut; }
        /** Constructor with member initializations */
        ns1__queryObjectOut()
        {
          _xtlb = (char *)0;
          _jkxlh = (char *)0;
          _jkid = (char *)0;
          _QueryXmlDoc = (char *)0;
          _dwjgdm = (char *)0;
          _cjsqbh = (char *)0;
          _zdbs = (char *)0;
          _dwmc = (char *)0;
          _yhbz = (char *)0;
          _yhxm = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__queryObjectOut(struct soap*, int) */
        friend SOAP_FMAC1 ns1__queryObjectOut * SOAP_FMAC2 soap_instantiate_ns1__queryObjectOut(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* TmriOutAccess.h:331 */
#ifndef SOAP_TYPE_ns1__writeObjectOutResponse
#define SOAP_TYPE_ns1__writeObjectOutResponse (12)
/* complex XSD type 'ns1:writeObjectOutResponse': */
struct SOAP_CMAC ns1__writeObjectOutResponse {
      public:
        /** Required element 'writeObjectOutReturn' of XSD type 'xsd:string' */
        char *_writeObjectOutReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__writeObjectOutResponse */
        int soap_type() const { return SOAP_TYPE_ns1__writeObjectOutResponse; }
        /** Constructor with member initializations */
        ns1__writeObjectOutResponse()
        {
          _writeObjectOutReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__writeObjectOutResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__writeObjectOutResponse * SOAP_FMAC2 soap_instantiate_ns1__writeObjectOutResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* TmriOutAccess.h:331 */
#ifndef SOAP_TYPE_ns1__writeObjectOut
#define SOAP_TYPE_ns1__writeObjectOut (13)
/* complex XSD type 'ns1:writeObjectOut': */
struct SOAP_CMAC ns1__writeObjectOut {
      public:
        /** Optional element 'xtlb' of XSD type 'xsd:string' */
        char *_xtlb;
        /** Optional element 'jkxlh' of XSD type 'xsd:string' */
        char *_jkxlh;
        /** Optional element 'jkid' of XSD type 'xsd:string' */
        char *_jkid;
        char *_jklb;
        /** Optional element 'UTF8XmlDoc' of XSD type 'xsd:string' */
        char *_WriteXmlDoc;
        /** Optional element 'dwjgdm' of XSD type 'xsd:string' */
        char *_dwjgdm;

        char *_cjsqbh;
        char *_zdbs;

        char *_dwmc;
        char *_yhbz;
        char *_yhxm;

      public:
        /** Return unique type id SOAP_TYPE_ns1__writeObjectOut */
        int soap_type() const { return SOAP_TYPE_ns1__writeObjectOut; }
        /** Constructor with member initializations */
        ns1__writeObjectOut()
        {
          _xtlb = (char *)0;
          _jkxlh = (char *)0;
          _jkid = (char *)0;
          _jklb = (char *)0;
          _WriteXmlDoc = (char *)0;
          _dwjgdm = (char *)0;

          _cjsqbh = (char *)0;
          _zdbs = (char *)0;
          _dwmc = (char *)0;
          _yhbz = (char *)0;
          _yhxm = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__writeObjectOut(struct soap*, int) */
        friend SOAP_FMAC1 ns1__writeObjectOut * SOAP_FMAC2 soap_instantiate_ns1__writeObjectOut(struct soap*, int, const char*, const char*, size_t*);
};
#endif


/* TmriOutAccess.h:344 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (14)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* TmriOutAccess.h:344 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (15)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* TmriOutAccess.h:344 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (17)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* TmriOutAccess.h:344 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (20)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* TmriOutAccess.h:344 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (21)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif




/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* TmriOutAccess.h:249 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* TmriOutAccess.h:249 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (21)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (20)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (17)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (15)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (14)
#endif

/* struct ns1__writeObjectOut has binding name 'ns1__writeObjectOut' for type 'ns1:writeObjectOut' */
#ifndef SOAP_TYPE_ns1__writeObjectOut
#define SOAP_TYPE_ns1__writeObjectOut (13)
#endif

/* struct ns1__writeObjectOutResponse has binding name 'ns1__writeObjectOutResponse' for type 'ns1:writeObjectOutResponse' */
#ifndef SOAP_TYPE_ns1__writeObjectOutResponse
#define SOAP_TYPE_ns1__writeObjectOutResponse (12)
#endif

/* struct ns1__queryObjectOut has binding name 'ns1__queryObjectOut' for type 'ns1:queryObjectOut' */
#ifndef SOAP_TYPE_ns1__queryObjectOut
#define SOAP_TYPE_ns1__queryObjectOut (10)
#endif

/* struct ns1__queryObjectOutResponse has binding name 'ns1__queryObjectOutResponse' for type 'ns1:queryObjectOutResponse' */
#ifndef SOAP_TYPE_ns1__queryObjectOutResponse
#define SOAP_TYPE_ns1__queryObjectOutResponse (9)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (23)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (22)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (16)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
